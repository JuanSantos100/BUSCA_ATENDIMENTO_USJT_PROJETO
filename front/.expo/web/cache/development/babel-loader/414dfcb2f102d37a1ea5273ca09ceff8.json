{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/saudeid/Documents/BUSCA_ATENDIMENTO_USJT_PROJETO/front/screens/Login.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Input, Text } from 'react-native-elements';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport styles from \"../style/MainStyle\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState('none'),\n      _useState2 = _slicedToArray(_useState, 2),\n      display = _useState2[0],\n      setDisplay = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var entrar = function entrar() {\n    navigation.reset({\n      index: 0,\n      routes: [{\n        name: \"Principal\"\n      }]\n    });\n  };\n\n  function enviarLogin() {\n    var response;\n    return _regeneratorRuntime.async(function enviarLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('http://192.168.1.66:3000/login', {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                email: email,\n                password: password\n              })\n            }));\n\n          case 2:\n            response = _context.sent;\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    h3: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Busca Atendimento\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, email, \" - \", password), React.createElement(Input, {\n    placeholder: \"E-mail\",\n    leftIcon: {\n      type: 'font-awesome',\n      name: 'envelope'\n    },\n    onChangeText: function onChangeText(value) {\n      return setEmail(value);\n    },\n    keyboardType: \"email-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Sua senha\",\n    leftIcon: {\n      type: 'font-awesome',\n      name: 'lock'\n    },\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    icon: React.createElement(Icon, {\n      name: \"check\",\n      size: 15,\n      color: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }),\n    title: \" Entrar\",\n    onPress: function onPress() {\n      return enviarLogin();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/saudeid/Documents/BUSCA_ATENDIMENTO_USJT_PROJETO/front/screens/Login.js"],"names":["React","useState","useEffect","Button","Input","Text","Icon","styles","Login","navigation","display","setDisplay","email","setEmail","password","setPassword","entrar","reset","index","routes","name","enviarLogin","fetch","method","headers","Accept","body","JSON","stringify","response","Platform","OS","container","type","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { KeyboardAvoidingView, Platform, StyleSheet, View } from 'react-native';\nimport { Button, Input, Text } from 'react-native-elements';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport styles from '../style/MainStyle';\n\n// var express = require(\"express\");\n// var app = express();\n// var bodyParser = require(\"body-parser\");\n\n// app.use(bodyParser.urlencoded({ extended : false}));\n\n// let base_usuarios = [\n//     [\"juan@hotmail.com\", \"123\", 1], \n//     [\"caetano@hotmail.com\", \"456\", 2],\n//     [\"farfan@hotmail.com\", \"789\", 3]\n// ]\n\n\n\n\nexport default function Login({ navigation }) {\n    \n\n    const [display, setDisplay] = useState('none')\n    const [email, setEmail] = useState(null)\n    const [password, setPassword] = useState(null)\n\n    const entrar = () => {\n        navigation.reset({\n            index: 0,\n            routes: [{ name: \"Principal\" }]\n        })\n    }\n\n   \n    async function enviarLogin() {\n        let response = await fetch('http://192.168.1.66:3000/login', {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                email: email,\n                password: password\n            })\n\n        })\n    }\n\n    return (\n        <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}>\n            <View style={styles.container}>\n                <Text h3>Busca Atendimento</Text>\n\n                <Text>{email} - {password}</Text>\n                <Input\n                    placeholder=\"E-mail\"\n                    leftIcon={{ type: 'font-awesome', name: 'envelope' }}\n                    onChangeText={value => setEmail(value)}\n                    keyboardType=\"email-address\"\n                />\n                <Input\n                    placeholder=\"Sua senha\"\n                    leftIcon={{ type: 'font-awesome', name: 'lock' }}\n                    onChangeText={value => setPassword(value)}\n                    secureTextEntry={true}\n                />\n                <Button\n                    icon={\n                        <Icon\n                            name=\"check\"\n                            size={15}\n                            color=\"white\"\n                        />\n                    }\n                    title=\" Entrar\"\n                    //onPress={() => entrar()}\n                    onPress={() => enviarLogin()}\n                />\n            </View>\n\n            {/* /* <View>\n                <Text style={styles.login_error_msg(display)}>Usuário ou senha inválidos</Text>\n            </View> */}\n        </KeyboardAvoidingView>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}